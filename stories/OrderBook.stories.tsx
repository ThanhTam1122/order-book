import React from 'react';

import { OrderBook, Layout } from '../src/OrderBook';
import pkg from '../package.json';

import book from './book';

export default {
  title: 'OrderBook',
  component: OrderBook,
  parameters: {
    componentSubtitle: pkg.description,
  },
};

export const Default = () => {
  return <OrderBook book={{ bids: book.bids.slice(0, 15), asks: book.asks.slice(0, 15) }} />;
};

export const LimitedSize = () => {
  return <OrderBook book={{ bids: book.bids, asks: book.asks }} listLength={10} />;
};

export const RowLayout = () => {
  return (
    <OrderBook book={{ bids: book.bids, asks: book.asks }} listLength={10} layout={Layout.Row} />
  );
};

export const WithHeaders = () => {
  return <OrderBook book={{ bids: book.bids, asks: book.asks }} listLength={10} showHeaders />;
};

export const WithoutSpread = () => {
  return (
    <OrderBook book={{ bids: book.bids, asks: book.asks }} listLength={10} showSpread={false} />
  );
};

export const WithCustomSpread = () => {
  return <OrderBook book={{ bids: book.bids, asks: book.asks }} listLength={10} spread="ðŸ‘‹" />;
};

WithCustomSpread.story = {
  parameters: {
    docs: {
      storyDescription: `OrderBook
      attempts to calculate the spread by subtracting the top of the
      bids from the top of the asks. If you want to provide your own spread value,
      you can use the \`spread\` prop to do it.
      `,
    },
  },
};

export const WithColors = () => {
  return (
    <OrderBook book={{ bids: book.bids, asks: book.asks }} listLength={10} applyBackgroundColor />
  );
};

WithColors.story = {
  parameters: {
    docs: {
      storyDescription: `This
      is where things get interesting. OrderBook can calculate colors
      per row of each side of the book. Also, OrderBook will create
      a CSS variable called \`--row-color\`, which you can use to write
      custom styles that take advantage of that color. However, there's
      also a handy \`applyBackgroundColor\` prop that you can use to
      let OrderBook set an inline background-color property for you.
      <br /><br />
      Although that's the only property OrderBook will set, you can still
      use the CSS variable to use each row color in interesting ways, which
      we'll explore in later stories.
      `,
    },
  },
};

export const WithFullOpacity = () => {
  return (
    <OrderBook
      applyBackgroundColor
      book={{ bids: book.bids, asks: book.asks }}
      fullOpacity
      listLength={10}
    />
  );
};

WithFullOpacity.story = {
  parameters: {
    docs: {
      storyDescription: `By
      default, the colors generated by OrderBook set the opacity
      argument of the rgba CSS function. You can disable this
      with the \`fullOpacity\` prop.
      `,
    },
  },
};

export const WithCustomColors = () => {
  return (
    <OrderBook
      applyBackgroundColor
      askColor={[255, 255, 0]}
      bidColor={[0, 255, 255]}
      book={{ bids: book.bids, asks: book.asks }}
      listLength={10}
    />
  );
};

export const WritingCustomStyles = () => {
  return (
    <div className="with-custom-styles">
      <style
        // eslint-disable-next-line react/no-danger
        dangerouslySetInnerHTML={{
          __html: `
            .with-custom-styles .rob_OrderBook li {
              color: var(--row-color);
              background: #111;
            }
          `,
        }}
      />

      <OrderBook book={{ bids: book.bids, asks: book.asks }} listLength={10} />
    </div>
  );
};

export const CustomColorInterpolation = () => {
  return (
    <div className="custom-color-interpolation">
      <style
        // eslint-disable-next-line react/no-danger
        dangerouslySetInnerHTML={{
          __html: `
            .custom-color-interpolation .rob_OrderBook li {
              color: var(--row-color);
            }
          `,
        }}
      />

      <OrderBook
        book={{ bids: book.bids, asks: book.asks }}
        fullOpacity
        listLength={10}
        interpolateColor={() => {
          return [
            Math.floor(Math.random() * 255) - 1,
            Math.floor(Math.random() * 255) - 1,
            Math.floor(Math.random() * 255) - 1,
          ];
        }}
      />
    </div>
  );
};

// export const StreamingData = () => {
//   return <OrderBook book={{ bids: book.bids, asks: book.asks }} />;
// };

export const MakeItNice = () => {
  return (
    <>
      <style
        // eslint-disable-next-line react/no-danger
        dangerouslySetInnerHTML={{
          __html: `
            .MakeItNice {
              font-family: -apple-system, BlinkMacSystemFont, sans-serif;
              font-size: 13px;
              font-variant-numeric: tabular-nums;
              display: inline-block;
              background-color: #070F15;
              color: rgba(255, 255, 255, 0.6);
              padding: 50px 0;
            }

            .MakeItNice__side-header {
              margin: 0 0 5px 0;
              font-weight: 700;
              text-align: right;
            }

            .MakeItNice__list {
              list-style-type: none;
              padding: 0;
              margin: 0;
            }

            .MakeItNice__list-item {
              cursor: pointer;
              padding: 3px 50px 3px 20px;
              display: flex;
            }

            .MakeItNice__list-item:hover {
              background: rgb(18, 29, 39);
            }

            .MakeItNice__price {
              flex: 0 0 70px;
              color: var(--row-color);
              text-align: right;
              display: inline-block;
              margin-right: 15px;
            }

            .MakeItNice__size {
              flex: 0 0 70px;
            }

            .MakeItNice__spread {
              border-width: 1px 0;
              border-style: solid;
              border-color: rgba(255, 255, 255, 0.2);
              padding: 5px 20px;
              text-align: center;
              display: flex;
            }

            .MakeItNice__spread-header {
              margin: 0 15px 0 0;
              flex: 0 0 70px;
              text-align: right;
            }

            .MakeItNice__spread-value {
              width: 28px;
              overflow: hidden;
            }
          `,
        }}
      />

      <OrderBook
        book={{ bids: book.bids, asks: book.asks }}
        fullOpacity
        interpolateColor={(color) => color}
        listLength={10}
        stylePrefix="MakeItNice"
      />
    </>
  );
};
